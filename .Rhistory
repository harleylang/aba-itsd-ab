guides(color=FALSE)
imgname <- paste0('figures/Figure_','SelectedGames-Cumulative','.png')
ggsave(imgname, width=8, height=6, units='in', dpi=300)
ggplot() + # bar graph of selected games
geom_bar(gameselected, mapping=aes(info, fill=info)) +
xlab('Games') + ylab('Count') +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill=FALSE)
imgname <- paste0('figures/Figure_','SelectedGames-Bar','.png')
ggsave(imgname, width=8, height=6, units='in', dpi=300)
ggplot() + # cumulative plot of copied games
scale_y_log10(name='Count of Game Copies') +
scale_x_datetime(
name='Time',
labels = date_format("%Y-%m-%dT%H:%M:%S")) +
geom_step(gamecopied, mapping=aes(
x=as.POSIXct(timestamp, format="%Y-%m-%dT%H:%M:%S"),
y=countbyactioninfo, group=info, color=info)) +
guides(color=FALSE)
imgname <- paste0('figures/Figure_','CopiedGames-Cumulative','.png')
ggsave(imgname, width=8, height=6, units='in', dpi=300)
ggplot() + # bar graph of copied games
geom_bar(gamecopied, mapping=aes(info, fill=info)) +
xlab('Games') + ylab('Count') +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill=FALSE)
imgname <- paste0('figures/Figure_','CopiedGames-Bar','.png')
ggsave(imgname, width=8, height=6, units='in', dpi=300)
# graph-session-bxn.R
# This file produces an example graph with session-by-session data for any number of behaviors.
# Written by Harley Lang.
# Contributors: [add yourself here if you edit this document]
library(ggplot2)
# set your working directory to current directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load data from CSV file; here we loaded a file with 3 behaviors, but theoretically any number of bxs can be added
data <- read.csv('./data/eg-session-bx3.csv', header = TRUE)
colnames(data)
grepl(colnames(data), 'bx')
grepl(colnames(data), c('bx')
)
grepl(c('bx'), colnames(data))
colnames(data)[grepl(c('bx'), colnames(data)),]
# A function that identifies (1) the number of bxs defined in the provided data (up to 4) and,
# (2) graphs those data accordingly.
library(dplyr)
filter(colname(data), 'bx')
filter(colnames(data), 'bx')
colnames(data)['bx' %in% colnames(data)]
colnames(data)['bx' %in% colnames(data),]
colnames(data)['bx',grepl(colnames(data))]
grepl(colnames(data))
colnames(data)[grepl('bx',colnames(data))]
# get list of data column names that begin with 'bx'
bxs <- colnames(data)[grepl('bx',colnames(data))]
bxs[1]
nrow(bxs)
length(bxs)
line <- geom_line(aes(x=data$session, y=data[bxs[1]], group=data$condition), colour="black", size=0.5)
# set your working directory to current directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load data from CSV file; here we loaded a file with 3 behaviors, but any number of bhx between 1-4 will work
data <- read.csv('./data/eg-session-bx3.csv', header = TRUE)
# graph aesthetics
source('./functions/graphThemeTemplate.R')
graph <- graphThemeTemplate(data)
# set aspect ratio ~~
graph <- graph + coord_fixed(ratio=1.6)
# set labels ~~
graph <- graph + labs(title='An Example AB Graph', x="Sessions", y="Count per Measure")
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
bxs <- c(0,1,2,3,4)
if (length(bxs) > 4) { stop('MORE THAN 4 MEASURES DETECTED. Please submit issue to repo for assistance with adding more measures.') }
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# view graph locally
graph
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# view graph locally
graph
# graph-session-bxn.R
# This file produces an example graph with session-by-session data for up to 4 behaviors.
# Written by Harley Lang.
# Contributors: [add yourself here if you edit this document]
library(ggplot2)
# set your working directory to current directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load data from CSV file; here we loaded a file with 3 behaviors, but any number of bhx between 1-4 will work
data <- read.csv('./data/eg-session-bx3.csv', header = TRUE)
# graph aesthetics
source('./functions/graphThemeTemplate.R')
graph <- graphThemeTemplate(data)
# set aspect ratio ~~
graph <- graph + coord_fixed(ratio=1.6)
# set labels ~~
graph <- graph + labs(title='An Example AB Graph', x="Sessions", y="Count per Measure")
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# view graph locally
graph
seq(length(bxs))
# graph aesthetics
source('./functions/graphThemeTemplate.R')
graph <- graphThemeTemplate(data)
# set aspect ratio ~~
graph <- graph + coord_fixed(ratio=1.6)
# set labels ~~
graph <- graph + labs(title='An Example AB Graph', x="Sessions", y="Count per Measure")
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# view graph locally
graph
syms
# create list of symbols; circle, triangle, square, x
syms <- c(16, 17, 15, 4)
syms[1]
# graph aesthetics
source('./functions/graphThemeTemplate.R')
graph <- graphThemeTemplate(data)
# set aspect ratio ~~
graph <- graph + coord_fixed(ratio=1.6)
# set labels ~~
graph <- graph + labs(title='An Example AB Graph', x="Sessions", y="Count per Measure")
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# graph aesthetics
source('./functions/graphThemeTemplate.R')
graph <- graphThemeTemplate(data)
# set aspect ratio ~~
graph <- graph + coord_fixed(ratio=1.6)
# set labels ~~
graph <- graph + labs(title='An Example AB Graph', x="Sessions", y="Count per Measure")
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
graph
# graph aesthetics
source('./functions/graphThemeTemplate.R')
graph <- graphThemeTemplate(data)
# set aspect ratio ~~
graph <- graph + coord_fixed(ratio=1.6)
# set labels ~~
graph <- graph + labs(title='An Example AB Graph', x="Sessions", y="Count per Measure")
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# view graph locally
graph
# graph aesthetics
source('./functions/graphThemeTemplate.R')
graph <- graphThemeTemplate(data)
# graph-session-bxn.R
# This file produces an example graph with session-by-session data for up to 4 behaviors.
# Written by Harley Lang.
# Contributors: [add yourself here if you edit this document]
library(ggplot2)
# set your working directory to current directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load data from CSV file; here we loaded a file with 3 behaviors, but any number of bhx between 1-4 will work
data <- read.csv('./data/eg-session-bx3.csv', header = TRUE)
# graph aesthetics
source('./functions/graphThemeTemplate.R')
graph <- graphThemeTemplate(data)
# set aspect ratio ~~
graph <- graph + coord_fixed(ratio=1.6)
# set labels ~~
graph <- graph + labs(title='An Example AB Graph', x="Sessions", y="Count per Measure")
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# view graph locally
graph
# graph aesthetics
source('./functions/graphThemeTemplate.R')
graph <- graphThemeTemplate(data)
# set aspect ratio ~~
graph <- graph + coord_fixed(ratio=1.6)
# set labels ~~
graph <- graph + labs(title='An Example AB Graph', x="Sessions", y="Count per Measure")
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# view graph locally
graph
# graph aesthetics
source('./functions/graphThemeTemplate.R')
graph <- graphThemeTemplate(data)
# set aspect ratio ~~
graph <- graph + coord_fixed(ratio=1.6)
# set labels ~~
graph <- graph + labs(title='An Example AB Graph', x="Sessions", y="Count per Measure")
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# view graph locally
graph
# graph aesthetics
source('./functions/graphThemeTemplate.R')
graph <- graphThemeTemplate(data)
# set aspect ratio ~~
graph <- graph + coord_fixed(ratio=1.6)
# set labels ~~
graph <- graph + labs(title='An Example AB Graph', x="Sessions", y="Count per Measure")
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# view graph locally
graph
# graph aesthetics
source('./functions/graphThemeTemplate.R')
graph <- graphThemeTemplate(data)
# set aspect ratio ~~
graph <- graph + coord_fixed(ratio=1.6)
# set labels ~~
graph <- graph + labs(title='An Example AB Graph', x="Sessions", y="Count per Measure")
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# view graph locally
graph
# graph aesthetics
source('./functions/graphThemeTemplate.R')
graph <- graphThemeTemplate(data)
# set aspect ratio ~~
graph <- graph + coord_fixed(ratio=1.6)
# set labels ~~
graph <- graph + labs(title='An Example AB Graph', x="Sessions", y="Count per Measure")
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# add condition lines ~~
source('./functions/addConditionLines.R')
graph <- addConditionLines(graph, data)
# view graph locally
graph
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# graph-session-bxn.R
# This file produces an example graph with session-by-session data for up to 4 behaviors.
# Written by Harley Lang.
# Contributors: [add yourself here if you edit this document]
library(ggplot2)
# set your working directory to current directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load data from CSV file; here we loaded a file with 3 behaviors, but any number of bhx between 1-4 will work
data <- read.csv('./data/eg-session-bx3.csv', header = TRUE)
# graph aesthetics
source('./functions/graphThemeTemplate.R')
graph <- graphThemeTemplate(data)
# set aspect ratio ~~
graph <- graph + coord_fixed(ratio=1.6)
# set labels ~~
graph <- graph + labs(title='An Example AB Graph', x="Sessions", y="Count per Measure")
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# view graph locally
graph
# graph aesthetics
source('./functions/graphThemeTemplate.R')
graph <- graphThemeTemplate(data)
# set aspect ratio ~~
graph <- graph + coord_fixed(ratio=1.6)
# set labels ~~
graph <- graph + labs(title='An Example AB Graph', x="Sessions", y="Count per Measure")
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# view graph locally
graph
graph <- addDataLinesAndPoints(graph, data)
graph
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
graph
# load data from CSV file; here we loaded a file with 3 behaviors, but any number of bhx between 1-4 will work
data <- read.csv('./data/eg-session-bx3.csv', header = TRUE)
# graph aesthetics
source('./functions/graphThemeTemplate.R')
graph <- graphThemeTemplate(data)
# set aspect ratio ~~
graph <- graph + coord_fixed(ratio=1.6)
# set labels ~~
graph <- graph + labs(title='An Example AB Graph', x="Sessions", y="Count per Measure")
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
graph
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
graph
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# graph aesthetics
source('./functions/graphThemeTemplate.R')
graph <- graphThemeTemplate(data)
# set aspect ratio ~~
graph <- graph + coord_fixed(ratio=1.6)
# set labels ~~
graph <- graph + labs(title='An Example AB Graph', x="Sessions", y="Count per Measure")
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
graph <- addDataLinesAndPoints(graph, data)
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# add condition lines ~~
source('./functions/addConditionLines.R')
graph <- addConditionLines(graph, data)
# add condition labels ~~
source('./functions/addConditionLabels.R')
graph <- addConditionLabels(graph, data, labels=c('Condition 1', 'Condition 2'))
# view graph locally
graph
# load data from CSV file; here we loaded a file with 3 behaviors, but any number of bhx between 1-4 will work
data <- read.csv('./data/eg-session-bx3.csv', header = TRUE)
# graph aesthetics
source('./functions/graphThemeTemplate.R')
graph <- graphThemeTemplate(data)
# set aspect ratio ~~
graph <- graph + coord_fixed(ratio=1.6)
# set labels ~~
graph <- graph + labs(title='An Example AB Graph', x="Sessions", y="Count per Measure")
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# view graph locally
graph
# load data from CSV file; here we loaded a file with 3 behaviors, but any number of bhx between 1-4 will work
data <- read.csv('./data/eg-session-bx3.csv', header = TRUE)
# graph aesthetics
source('./functions/graphThemeTemplate.R')
graph <- graphThemeTemplate(data)
# set aspect ratio ~~
graph <- graph + coord_fixed(ratio=1.6)
# set labels ~~
graph <- graph + labs(title='An Example AB Graph', x="Sessions", y="Count per Measure")
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# add condition lines ~~
source('./functions/addConditionLines.R')
graph <- addConditionLines(graph, data)
# add condition labels ~~
source('./functions/addConditionLabels.R')
graph <- addConditionLabels(graph, data, labels=c('Condition 1', 'Condition 2'))
# view graph locally
graph
# load data from CSV file; here we loaded a file with 3 behaviors, but any number of bhx between 1-4 will work
data <- read.csv('./data/eg-session-bx3.csv', header = TRUE)
# graph aesthetics
source('./functions/graphThemeTemplate.R')
graph <- graphThemeTemplate(data)
# set aspect ratio ~~
graph <- graph + coord_fixed(ratio=1.6)
# set labels ~~
graph <- graph + labs(title='An Example AB Graph', x="Sessions", y="Count per Measure")
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# add condition lines ~~
source('./functions/addConditionLines.R')
graph <- addConditionLines(graph, data)
# add condition labels ~~
source('./functions/addConditionLabels.R')
graph <- addConditionLabels(graph, data, labels=c('Condition 1', 'Condition 2'))
# view graph locally
graph
# print graph to file
ggsave("graph-session-bxn.png", graph, width=16, height=10, units="cm")
# load data from CSV file; here we loaded a file with 3 behaviors, but any number of bhx between 1-4 will work
data <- read.csv('./data/eg-session-bx3.csv', header = TRUE)
# graph aesthetics
source('./functions/graphThemeTemplate.R')
graph <- graphThemeTemplate(data)
# set aspect ratio ~~
graph <- graph + coord_fixed(ratio=1.6)
# set labels ~~
graph <- graph + labs(title='An Example AB Graph', x="Sessions", y="Count per Measure")
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# add condition lines ~~
source('./functions/addConditionLines.R')
graph <- addConditionLines(graph, data)
# add condition labels ~~
source('./functions/addConditionLabels.R')
graph <- addConditionLabels(graph, data, labels=c('Condition 1', 'Condition 2'))
# view graph locally
graph
# graph-session-bxn.R
# This file produces an example graph with session-by-session data for up to 4 behaviors.
# Written by Harley Lang.
# Contributors: [add yourself here if you edit this document]
library(ggplot2)
# set your working directory to current directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load data from CSV file; here we loaded a file with 3 behaviors, but any number of bhx between 1-4 will work
data <- read.csv('./data/eg-session-bx3.csv', header = TRUE)
# graph aesthetics
source('./functions/graphThemeTemplate.R')
# graph aesthetics
source('./functions/graphThemeTemplate.R')
# graph aesthetics
source('./functions/graphThemeTemplate.R')
graph <- graphThemeTemplate(data)
# set aspect ratio ~~
graph <- graph + coord_fixed(ratio=1.6)
# set labels ~~
graph <- graph + labs(title='An Example AB Graph', x="Sessions", y="Count per Measure")
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# add condition lines ~~
source('./functions/addConditionLines.R')
graph <- addConditionLines(graph, data)
# add condition labels ~~
source('./functions/addConditionLabels.R')
graph <- addConditionLabels(graph, data, labels=c('Condition 1', 'Condition 2'))
# view graph locally
graph
# graph-session-bxn.R
# This file produces an example graph with session-by-session data for up to 4 behaviors.
# Written by Harley Lang.
# Contributors: [add yourself here if you edit this document]
library(ggplot2)
# set your working directory to current directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load data from CSV file; here we loaded a file with 3 behaviors, but any number of bhx between 1-4 will work
data <- read.csv('./data/eg-session-bx3.csv', header = TRUE)
# graph aesthetics
source('./functions/graphThemeTemplate.R')
graph <- graphThemeTemplate(data)
# set aspect ratio ~~
graph <- graph + coord_fixed(ratio=1.6)
# set labels ~~
graph <- graph + labs(title='An Example AB Graph', x="Sessions", y="Count per Measure")
# add trend lines and points ~~
source('./functions/addDataLinesAndPoints.R')
graph <- addDataLinesAndPoints(graph, data)
# add condition lines ~~
source('./functions/addConditionLines.R')
graph <- addConditionLines(graph, data)
# add condition labels ~~
source('./functions/addConditionLabels.R')
graph <- addConditionLabels(graph, data, labels=c('Condition 1', 'Condition 2'))
# view graph locally
graph
# print graph to file
ggsave("graph-session-bxn.png", graph, width=16, height=10, units="cm")
# graph-session-bx1.R
# This file produces an example graph with session-by-session data for 1 behavior.
# Written by Harley Lang.
# Contributors: [add yourself here if you edit this document]
library(ggplot2)
# set your working directory to current directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load data from CSV file
data <- read.csv('./data/eg-session-bx1.csv', header = TRUE)
# graph aesthetics
source('./functions/graphThemeTemplate.R')
graph <- graphThemeTemplate(data)
# set aspect ratio ~~
graph <- graph + coord_fixed(ratio=1.6)
# set labels ~~
graph <- graph + labs(title='An Example AB Graph', x="Sessions", y="Count per Measure")
# add trend lines ~~
graph <- graph + geom_line(aes(x=data$session, y=data$bx1, group=data$condition), colour="black", size=0.5)
# add the data points ~~
graph <- graph + geom_point(aes(x=data$session, y=data$bx1, group=data$condition), colour="black", size=2.5)
# add condition lines ~~
source('./functions/addConditionLines.R')
graph <- addConditionLines(graph, data)
# add condition labels ~~
source('./functions/addConditionLabels.R')
graph <- addConditionLabels(graph, data, labels=c('Condition 1', 'Condition 2'))
# view graph locally
graph
